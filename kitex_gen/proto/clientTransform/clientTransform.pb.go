// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: clientTransform.proto

package clientTransform

import (
	context "context"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScraperType int32

const (
	ScraperType_LOCAL ScraperType = 0
	ScraperType_API   ScraperType = 1
)

// Enum value maps for ScraperType.
var (
	ScraperType_name = map[int32]string{
		0: "LOCAL",
		1: "API",
	}
	ScraperType_value = map[string]int32{
		"LOCAL": 0,
		"API":   1,
	}
)

func (x ScraperType) Enum() *ScraperType {
	p := new(ScraperType)
	*p = x
	return p
}

func (x ScraperType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScraperType) Descriptor() protoreflect.EnumDescriptor {
	return file_clientTransform_proto_enumTypes[0].Descriptor()
}

func (ScraperType) Type() protoreflect.EnumType {
	return &file_clientTransform_proto_enumTypes[0]
}

func (x ScraperType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScraperType.Descriptor instead.
func (ScraperType) EnumDescriptor() ([]byte, []int) {
	return file_clientTransform_proto_rawDescGZIP(), []int{0}
}

type ResponseStatusCode int32

const (
	ResponseStatusCode_RESPONSE_OK     ResponseStatusCode = 0
	ResponseStatusCode_RESPONSE_FAILED ResponseStatusCode = 1
)

// Enum value maps for ResponseStatusCode.
var (
	ResponseStatusCode_name = map[int32]string{
		0: "RESPONSE_OK",
		1: "RESPONSE_FAILED",
	}
	ResponseStatusCode_value = map[string]int32{
		"RESPONSE_OK":     0,
		"RESPONSE_FAILED": 1,
	}
)

func (x ResponseStatusCode) Enum() *ResponseStatusCode {
	p := new(ResponseStatusCode)
	*p = x
	return p
}

func (x ResponseStatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseStatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_clientTransform_proto_enumTypes[1].Descriptor()
}

func (ResponseStatusCode) Type() protoreflect.EnumType {
	return &file_clientTransform_proto_enumTypes[1]
}

func (x ResponseStatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResponseStatusCode.Descriptor instead.
func (ResponseStatusCode) EnumDescriptor() ([]byte, []int) {
	return file_clientTransform_proto_rawDescGZIP(), []int{1}
}

type FilePreStatusCode int32

const (
	FilePreStatusCode_FILE_PRE_EXISTS    FilePreStatusCode = 0
	FilePreStatusCode_FILE_PRE_NOT_EXIST FilePreStatusCode = 1
	FilePreStatusCode_FILE_PRE_FAILED    FilePreStatusCode = 2
)

// Enum value maps for FilePreStatusCode.
var (
	FilePreStatusCode_name = map[int32]string{
		0: "FILE_PRE_EXISTS",
		1: "FILE_PRE_NOT_EXIST",
		2: "FILE_PRE_FAILED",
	}
	FilePreStatusCode_value = map[string]int32{
		"FILE_PRE_EXISTS":    0,
		"FILE_PRE_NOT_EXIST": 1,
		"FILE_PRE_FAILED":    2,
	}
)

func (x FilePreStatusCode) Enum() *FilePreStatusCode {
	p := new(FilePreStatusCode)
	*p = x
	return p
}

func (x FilePreStatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilePreStatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_clientTransform_proto_enumTypes[2].Descriptor()
}

func (FilePreStatusCode) Type() protoreflect.EnumType {
	return &file_clientTransform_proto_enumTypes[2]
}

func (x FilePreStatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FilePreStatusCode.Descriptor instead.
func (FilePreStatusCode) EnumDescriptor() ([]byte, []int) {
	return file_clientTransform_proto_rawDescGZIP(), []int{2}
}

type FilePostStatusCode int32

const (
	FilePostStatusCode_FILE_POST_SUCCESS FilePostStatusCode = 0
	FilePostStatusCode_FILE_POST_FAILED  FilePostStatusCode = 1
)

// Enum value maps for FilePostStatusCode.
var (
	FilePostStatusCode_name = map[int32]string{
		0: "FILE_POST_SUCCESS",
		1: "FILE_POST_FAILED",
	}
	FilePostStatusCode_value = map[string]int32{
		"FILE_POST_SUCCESS": 0,
		"FILE_POST_FAILED":  1,
	}
)

func (x FilePostStatusCode) Enum() *FilePostStatusCode {
	p := new(FilePostStatusCode)
	*p = x
	return p
}

func (x FilePostStatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilePostStatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_clientTransform_proto_enumTypes[3].Descriptor()
}

func (FilePostStatusCode) Type() protoreflect.EnumType {
	return &file_clientTransform_proto_enumTypes[3]
}

func (x FilePostStatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FilePostStatusCode.Descriptor instead.
func (FilePostStatusCode) EnumDescriptor() ([]byte, []int) {
	return file_clientTransform_proto_rawDescGZIP(), []int{3}
}

// ClientInfo contain client identifier
type ClientInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientUUID string `protobuf:"bytes,1,opt,name=clientUUID,proto3" json:"clientUUID,omitempty"`
	ClientName string `protobuf:"bytes,2,opt,name=clientName,proto3" json:"clientName,omitempty"`
}

func (x *ClientInfo) Reset() {
	*x = ClientInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clientTransform_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientInfo) ProtoMessage() {}

func (x *ClientInfo) ProtoReflect() protoreflect.Message {
	mi := &file_clientTransform_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientInfo.ProtoReflect.Descriptor instead.
func (*ClientInfo) Descriptor() ([]byte, []int) {
	return file_clientTransform_proto_rawDescGZIP(), []int{0}
}

func (x *ClientInfo) GetClientUUID() string {
	if x != nil {
		return x.ClientUUID
	}
	return ""
}

func (x *ClientInfo) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

// PreUploadFileData
// ResourceUUID Used to uniquely identify the resource
// ResourceUri Path to the local ClientImpl for the resource
type PreUploadFileData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScraperType  ScraperType `protobuf:"varint,1,opt,name=scraperType,proto3,enum=protoFile.ScraperType" json:"scraperType,omitempty"`
	ResourceUUID string      `protobuf:"bytes,2,opt,name=resourceUUID,proto3" json:"resourceUUID,omitempty"`
	ResourceUri  string      `protobuf:"bytes,3,opt,name=resourceUri,proto3" json:"resourceUri,omitempty"`
}

func (x *PreUploadFileData) Reset() {
	*x = PreUploadFileData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clientTransform_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreUploadFileData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreUploadFileData) ProtoMessage() {}

func (x *PreUploadFileData) ProtoReflect() protoreflect.Message {
	mi := &file_clientTransform_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreUploadFileData.ProtoReflect.Descriptor instead.
func (*PreUploadFileData) Descriptor() ([]byte, []int) {
	return file_clientTransform_proto_rawDescGZIP(), []int{1}
}

func (x *PreUploadFileData) GetScraperType() ScraperType {
	if x != nil {
		return x.ScraperType
	}
	return ScraperType_LOCAL
}

func (x *PreUploadFileData) GetResourceUUID() string {
	if x != nil {
		return x.ResourceUUID
	}
	return ""
}

func (x *PreUploadFileData) GetResourceUri() string {
	if x != nil {
		return x.ResourceUri
	}
	return ""
}

// UploadFileData
// FileUUID Used to uniquely identify the uploaded file
// FileContent Path to the local ClientImpl for the uploaded file
type UploadFileData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScraperType ScraperType `protobuf:"varint,1,opt,name=scraperType,proto3,enum=protoFile.ScraperType" json:"scraperType,omitempty"`
	FileUUID    string      `protobuf:"bytes,2,opt,name=fileUUID,proto3" json:"fileUUID,omitempty"`
	FileContent []byte      `protobuf:"bytes,3,opt,name=fileContent,proto3" json:"fileContent,omitempty"`
}

func (x *UploadFileData) Reset() {
	*x = UploadFileData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clientTransform_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileData) ProtoMessage() {}

func (x *UploadFileData) ProtoReflect() protoreflect.Message {
	mi := &file_clientTransform_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileData.ProtoReflect.Descriptor instead.
func (*UploadFileData) Descriptor() ([]byte, []int) {
	return file_clientTransform_proto_rawDescGZIP(), []int{2}
}

func (x *UploadFileData) GetScraperType() ScraperType {
	if x != nil {
		return x.ScraperType
	}
	return ScraperType_LOCAL
}

func (x *UploadFileData) GetFileUUID() string {
	if x != nil {
		return x.FileUUID
	}
	return ""
}

func (x *UploadFileData) GetFileContent() []byte {
	if x != nil {
		return x.FileContent
	}
	return nil
}

// FilePreRequest perform first, if the same uuid exists it is not uploaded
type FilePreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientInfo *ClientInfo          `protobuf:"bytes,1,opt,name=clientInfo,proto3" json:"clientInfo,omitempty"`
	Data       []*PreUploadFileData `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *FilePreRequest) Reset() {
	*x = FilePreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clientTransform_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilePreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilePreRequest) ProtoMessage() {}

func (x *FilePreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clientTransform_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilePreRequest.ProtoReflect.Descriptor instead.
func (*FilePreRequest) Descriptor() ([]byte, []int) {
	return file_clientTransform_proto_rawDescGZIP(), []int{3}
}

func (x *FilePreRequest) GetClientInfo() *ClientInfo {
	if x != nil {
		return x.ClientInfo
	}
	return nil
}

func (x *FilePreRequest) GetData() []*PreUploadFileData {
	if x != nil {
		return x.Data
	}
	return nil
}

// FilePostRequest upload the file content which server needs to store
type FilePostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientInfo *ClientInfo       `protobuf:"bytes,1,opt,name=clientInfo,proto3" json:"clientInfo,omitempty"`
	Data       []*UploadFileData `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *FilePostRequest) Reset() {
	*x = FilePostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clientTransform_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilePostRequest) ProtoMessage() {}

func (x *FilePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clientTransform_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilePostRequest.ProtoReflect.Descriptor instead.
func (*FilePostRequest) Descriptor() ([]byte, []int) {
	return file_clientTransform_proto_rawDescGZIP(), []int{4}
}

func (x *FilePostRequest) GetClientInfo() *ClientInfo {
	if x != nil {
		return x.ClientInfo
	}
	return nil
}

func (x *FilePostRequest) GetData() []*UploadFileData {
	if x != nil {
		return x.Data
	}
	return nil
}

type FilePreStatusData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceUUID        string            `protobuf:"bytes,1,opt,name=resourceUUID,proto3" json:"resourceUUID,omitempty"`
	FilePreUploadStatus FilePreStatusCode `protobuf:"varint,2,opt,name=filePreUploadStatus,proto3,enum=protoFile.FilePreStatusCode" json:"filePreUploadStatus,omitempty"`
}

func (x *FilePreStatusData) Reset() {
	*x = FilePreStatusData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clientTransform_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilePreStatusData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilePreStatusData) ProtoMessage() {}

func (x *FilePreStatusData) ProtoReflect() protoreflect.Message {
	mi := &file_clientTransform_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilePreStatusData.ProtoReflect.Descriptor instead.
func (*FilePreStatusData) Descriptor() ([]byte, []int) {
	return file_clientTransform_proto_rawDescGZIP(), []int{5}
}

func (x *FilePreStatusData) GetResourceUUID() string {
	if x != nil {
		return x.ResourceUUID
	}
	return ""
}

func (x *FilePreStatusData) GetFilePreUploadStatus() FilePreStatusCode {
	if x != nil {
		return x.FilePreUploadStatus
	}
	return FilePreStatusCode_FILE_PRE_EXISTS
}

type FilePostStatusData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileUUID             string             `protobuf:"bytes,1,opt,name=fileUUID,proto3" json:"fileUUID,omitempty"`
	FilePostUploadStatus FilePostStatusCode `protobuf:"varint,2,opt,name=filePostUploadStatus,proto3,enum=protoFile.FilePostStatusCode" json:"filePostUploadStatus,omitempty"`
}

func (x *FilePostStatusData) Reset() {
	*x = FilePostStatusData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clientTransform_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilePostStatusData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilePostStatusData) ProtoMessage() {}

func (x *FilePostStatusData) ProtoReflect() protoreflect.Message {
	mi := &file_clientTransform_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilePostStatusData.ProtoReflect.Descriptor instead.
func (*FilePostStatusData) Descriptor() ([]byte, []int) {
	return file_clientTransform_proto_rawDescGZIP(), []int{6}
}

func (x *FilePostStatusData) GetFileUUID() string {
	if x != nil {
		return x.FileUUID
	}
	return ""
}

func (x *FilePostStatusData) GetFilePostUploadStatus() FilePostStatusCode {
	if x != nil {
		return x.FilePostUploadStatus
	}
	return FilePostStatusCode_FILE_POST_SUCCESS
}

type FilePreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode          ResponseStatusCode   `protobuf:"varint,1,opt,name=statusCode,proto3,enum=protoFile.ResponseStatusCode" json:"statusCode,omitempty"`
	FilePreUploadStatus []*FilePreStatusData `protobuf:"bytes,2,rep,name=filePreUploadStatus,proto3" json:"filePreUploadStatus,omitempty"`
	Message             string               `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *FilePreResponse) Reset() {
	*x = FilePreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clientTransform_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilePreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilePreResponse) ProtoMessage() {}

func (x *FilePreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clientTransform_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilePreResponse.ProtoReflect.Descriptor instead.
func (*FilePreResponse) Descriptor() ([]byte, []int) {
	return file_clientTransform_proto_rawDescGZIP(), []int{7}
}

func (x *FilePreResponse) GetStatusCode() ResponseStatusCode {
	if x != nil {
		return x.StatusCode
	}
	return ResponseStatusCode_RESPONSE_OK
}

func (x *FilePreResponse) GetFilePreUploadStatus() []*FilePreStatusData {
	if x != nil {
		return x.FilePreUploadStatus
	}
	return nil
}

func (x *FilePreResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type FilePostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode           ResponseStatusCode    `protobuf:"varint,1,opt,name=statusCode,proto3,enum=protoFile.ResponseStatusCode" json:"statusCode,omitempty"`
	FilePostUploadStatus []*FilePostStatusData `protobuf:"bytes,2,rep,name=filePostUploadStatus,proto3" json:"filePostUploadStatus,omitempty"`
	Message              string                `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *FilePostResponse) Reset() {
	*x = FilePostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clientTransform_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilePostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilePostResponse) ProtoMessage() {}

func (x *FilePostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clientTransform_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilePostResponse.ProtoReflect.Descriptor instead.
func (*FilePostResponse) Descriptor() ([]byte, []int) {
	return file_clientTransform_proto_rawDescGZIP(), []int{8}
}

func (x *FilePostResponse) GetStatusCode() ResponseStatusCode {
	if x != nil {
		return x.StatusCode
	}
	return ResponseStatusCode_RESPONSE_OK
}

func (x *FilePostResponse) GetFilePostUploadStatus() []*FilePostStatusData {
	if x != nil {
		return x.FilePostUploadStatus
	}
	return nil
}

func (x *FilePostResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_clientTransform_proto protoreflect.FileDescriptor

var file_clientTransform_proto_rawDesc = []byte{
	0x0a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x69,
	0x6c, 0x65, 0x22, 0x4c, 0x0a, 0x0a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x55, 0x49, 0x44,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x93, 0x01, 0x0a, 0x11, 0x50, 0x72, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x0b, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x55, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x55, 0x55, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x55, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x55, 0x72, 0x69, 0x22, 0x88, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x0b, 0x73, 0x63, 0x72,
	0x61, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x63, 0x72, 0x61, 0x70,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x55, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x55, 0x49, 0x44, 0x12,
	0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x22, 0x79, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x46,
	0x69, 0x6c, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x46, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x72, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x77, 0x0a, 0x0f,
	0x46, 0x69, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x35, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x2e,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x65,
	0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x87, 0x01, 0x0a, 0x11, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x72,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x55, 0x49, 0x44, 0x12,
	0x4e, 0x0a, 0x13, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x13, 0x66, 0x69, 0x6c, 0x65,
	0x50, 0x72, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x83, 0x01, 0x0a, 0x12, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x55,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x55,
	0x49, 0x44, 0x12, 0x51, 0x0a, 0x14, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x14, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xba, 0x01, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x72,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x4e, 0x0a, 0x13, 0x66, 0x69, 0x6c, 0x65,
	0x50, 0x72, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x69, 0x6c,
	0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x13, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x65, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0xbe, 0x01, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x51, 0x0a, 0x14, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x6f,
	0x73, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x65,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x14, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2a, 0x21, 0x0a, 0x0b, 0x53, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x07, 0x0a,
	0x03, 0x41, 0x50, 0x49, 0x10, 0x01, 0x2a, 0x3a, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0f, 0x0a, 0x0b,
	0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x13, 0x0a,
	0x0f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x01, 0x2a, 0x55, 0x0a, 0x11, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x46, 0x49, 0x4c, 0x45, 0x5f,
	0x50, 0x52, 0x45, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12,
	0x46, 0x49, 0x4c, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49,
	0x53, 0x54, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x50, 0x52, 0x45,
	0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x2a, 0x41, 0x0a, 0x12, 0x46, 0x69, 0x6c,
	0x65, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x15, 0x0a, 0x11, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x50, 0x4f, 0x53, 0x54, 0x5f, 0x53, 0x55, 0x43,
	0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x50,
	0x4f, 0x53, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x32, 0xb6, 0x01, 0x0a,
	0x11, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x4e, 0x0a, 0x13, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x50, 0x72, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x65,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x51, 0x0a, 0x14, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x50, 0x6f, 0x73, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x69,
	0x6c, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x46, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6b, 0x35, 0x6c, 0x73, 0x32, 0x30, 0x2f, 0x4e, 0x65, 0x6b, 0x6f,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x6b, 0x69,
	0x74, 0x65, 0x78, 0x5f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_clientTransform_proto_rawDescOnce sync.Once
	file_clientTransform_proto_rawDescData = file_clientTransform_proto_rawDesc
)

func file_clientTransform_proto_rawDescGZIP() []byte {
	file_clientTransform_proto_rawDescOnce.Do(func() {
		file_clientTransform_proto_rawDescData = protoimpl.X.CompressGZIP(file_clientTransform_proto_rawDescData)
	})
	return file_clientTransform_proto_rawDescData
}

var file_clientTransform_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_clientTransform_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_clientTransform_proto_goTypes = []interface{}{
	(ScraperType)(0),           // 0: protoFile.ScraperType
	(ResponseStatusCode)(0),    // 1: protoFile.ResponseStatusCode
	(FilePreStatusCode)(0),     // 2: protoFile.FilePreStatusCode
	(FilePostStatusCode)(0),    // 3: protoFile.FilePostStatusCode
	(*ClientInfo)(nil),         // 4: protoFile.ClientInfo
	(*PreUploadFileData)(nil),  // 5: protoFile.PreUploadFileData
	(*UploadFileData)(nil),     // 6: protoFile.UploadFileData
	(*FilePreRequest)(nil),     // 7: protoFile.FilePreRequest
	(*FilePostRequest)(nil),    // 8: protoFile.FilePostRequest
	(*FilePreStatusData)(nil),  // 9: protoFile.FilePreStatusData
	(*FilePostStatusData)(nil), // 10: protoFile.FilePostStatusData
	(*FilePreResponse)(nil),    // 11: protoFile.FilePreResponse
	(*FilePostResponse)(nil),   // 12: protoFile.FilePostResponse
}
var file_clientTransform_proto_depIdxs = []int32{
	0,  // 0: protoFile.PreUploadFileData.scraperType:type_name -> protoFile.ScraperType
	0,  // 1: protoFile.UploadFileData.scraperType:type_name -> protoFile.ScraperType
	4,  // 2: protoFile.FilePreRequest.clientInfo:type_name -> protoFile.ClientInfo
	5,  // 3: protoFile.FilePreRequest.data:type_name -> protoFile.PreUploadFileData
	4,  // 4: protoFile.FilePostRequest.clientInfo:type_name -> protoFile.ClientInfo
	6,  // 5: protoFile.FilePostRequest.data:type_name -> protoFile.UploadFileData
	2,  // 6: protoFile.FilePreStatusData.filePreUploadStatus:type_name -> protoFile.FilePreStatusCode
	3,  // 7: protoFile.FilePostStatusData.filePostUploadStatus:type_name -> protoFile.FilePostStatusCode
	1,  // 8: protoFile.FilePreResponse.statusCode:type_name -> protoFile.ResponseStatusCode
	9,  // 9: protoFile.FilePreResponse.filePreUploadStatus:type_name -> protoFile.FilePreStatusData
	1,  // 10: protoFile.FilePostResponse.statusCode:type_name -> protoFile.ResponseStatusCode
	10, // 11: protoFile.FilePostResponse.filePostUploadStatus:type_name -> protoFile.FilePostStatusData
	7,  // 12: protoFile.FileUploadService.HandleFilePreUpload:input_type -> protoFile.FilePreRequest
	8,  // 13: protoFile.FileUploadService.HandleFilePostUpload:input_type -> protoFile.FilePostRequest
	11, // 14: protoFile.FileUploadService.HandleFilePreUpload:output_type -> protoFile.FilePreResponse
	12, // 15: protoFile.FileUploadService.HandleFilePostUpload:output_type -> protoFile.FilePostResponse
	14, // [14:16] is the sub-list for method output_type
	12, // [12:14] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_clientTransform_proto_init() }
func file_clientTransform_proto_init() {
	if File_clientTransform_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_clientTransform_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clientTransform_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreUploadFileData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clientTransform_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clientTransform_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilePreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clientTransform_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilePostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clientTransform_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilePreStatusData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clientTransform_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilePostStatusData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clientTransform_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilePreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clientTransform_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilePostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_clientTransform_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_clientTransform_proto_goTypes,
		DependencyIndexes: file_clientTransform_proto_depIdxs,
		EnumInfos:         file_clientTransform_proto_enumTypes,
		MessageInfos:      file_clientTransform_proto_msgTypes,
	}.Build()
	File_clientTransform_proto = out.File
	file_clientTransform_proto_rawDesc = nil
	file_clientTransform_proto_goTypes = nil
	file_clientTransform_proto_depIdxs = nil
}

var _ context.Context

// Code generated by Kitex v0.9.1. DO NOT EDIT.

type FileUploadService interface {
	HandleFilePreUpload(ctx context.Context, req *FilePreRequest) (res *FilePreResponse, err error)
	HandleFilePostUpload(ctx context.Context, req *FilePostRequest) (res *FilePostResponse, err error)
}
